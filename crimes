{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import datetime\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I will be analyzing the difference between the crime levels in San Francisco during a home game day vs a non game day. The team that I will be using are the 49ers. The crime dataset is from https://data.sfgov.org/Public-Safety/Police-Department-Calls-for-Service/hz9m-tj6z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>193074002</td>\n",
       "      <td>Traf Violation Tow</td>\n",
       "      <td>11/03/2019 10:33:00 PM</td>\n",
       "      <td>GOA</td>\n",
       "      <td>0 Block Of Rausch St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>193074003</td>\n",
       "      <td>Traf Violation Tow</td>\n",
       "      <td>11/03/2019 10:33:00 PM</td>\n",
       "      <td>HAN</td>\n",
       "      <td>200 Block Of Laguna St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>193074004</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>11/03/2019 10:33:00 PM</td>\n",
       "      <td>GOA</td>\n",
       "      <td>1700 Block Of Bancroft Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>193074006</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>11/03/2019 10:35:00 PM</td>\n",
       "      <td>CIT</td>\n",
       "      <td>Funston Av/balboa St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>193074008</td>\n",
       "      <td>Fight No Weapon</td>\n",
       "      <td>11/03/2019 10:34:00 PM</td>\n",
       "      <td>HAN</td>\n",
       "      <td>600 Block Of 4th St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Crime Id Original Crime Type Name          Call Date Time Disposition  \\\n",
       "0  193074002       Traf Violation Tow  11/03/2019 10:33:00 PM         GOA   \n",
       "1  193074003       Traf Violation Tow  11/03/2019 10:33:00 PM         HAN   \n",
       "2  193074004      Traf Violation Cite  11/03/2019 10:33:00 PM         GOA   \n",
       "3  193074006             Traffic Stop  11/03/2019 10:35:00 PM         CIT   \n",
       "4  193074008          Fight No Weapon  11/03/2019 10:34:00 PM         HAN   \n",
       "\n",
       "                     Address           City State  Agency Id Common Location  \n",
       "0       0 Block Of Rausch St  San Francisco    CA          1             NaN  \n",
       "1     200 Block Of Laguna St  San Francisco    CA          1             NaN  \n",
       "2  1700 Block Of Bancroft Av  San Francisco    CA          1             NaN  \n",
       "3       Funston Av/balboa St  San Francisco    CA          1             NaN  \n",
       "4        600 Block Of 4th St  San Francisco    CA          1             NaN  "
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('crimes.csv')\n",
    "\n",
    "#I dropped the some rows that were unnecessary for this assignment \n",
    "df = df.drop([\"Report Date\", \"Call Date\", \"Offense Date\", \"Call Time\", \"Address Type\"], axis = 1)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Call Date Time'] = df['Call Date Time'].apply(lambda x: datetime.datetime.strptime(x, \"%m/%d/%Y %I:%M:%S %p\").strftime(\"%Y-%m-%d %H:%M:%S\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Call Date Time</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019-11-03 22:33:00</th>\n",
       "      <td>193074002</td>\n",
       "      <td>Traf Violation Tow</td>\n",
       "      <td>GOA</td>\n",
       "      <td>0 Block Of Rausch St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-11-03 22:33:00</th>\n",
       "      <td>193074003</td>\n",
       "      <td>Traf Violation Tow</td>\n",
       "      <td>HAN</td>\n",
       "      <td>200 Block Of Laguna St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-11-03 22:33:00</th>\n",
       "      <td>193074004</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>GOA</td>\n",
       "      <td>1700 Block Of Bancroft Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-11-03 22:35:00</th>\n",
       "      <td>193074006</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>CIT</td>\n",
       "      <td>Funston Av/balboa St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-11-03 22:34:00</th>\n",
       "      <td>193074008</td>\n",
       "      <td>Fight No Weapon</td>\n",
       "      <td>HAN</td>\n",
       "      <td>600 Block Of 4th St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-31 23:46:00</th>\n",
       "      <td>183653737</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>CIT</td>\n",
       "      <td>Sansome St/chestnut St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-31 23:47:00</th>\n",
       "      <td>183653745</td>\n",
       "      <td>Audible Alarm</td>\n",
       "      <td>PAS</td>\n",
       "      <td>1900 Block Of 18th Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-31 23:49:00</th>\n",
       "      <td>183653746</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>HAN</td>\n",
       "      <td>3300 Block Of 20th Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>Stonestown Galleria, Sf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-31 23:54:00</th>\n",
       "      <td>183653756</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>CIT</td>\n",
       "      <td>100 Blk Howard St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-31 23:57:00</th>\n",
       "      <td>183653763</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>ADM</td>\n",
       "      <td>Geary Bl/divisadero St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3348194 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Crime Id Original Crime Type Name Disposition  \\\n",
       "Call Date Time                                                        \n",
       "2019-11-03 22:33:00  193074002       Traf Violation Tow         GOA   \n",
       "2019-11-03 22:33:00  193074003       Traf Violation Tow         HAN   \n",
       "2019-11-03 22:33:00  193074004      Traf Violation Cite         GOA   \n",
       "2019-11-03 22:35:00  193074006             Traffic Stop         CIT   \n",
       "2019-11-03 22:34:00  193074008          Fight No Weapon         HAN   \n",
       "...                        ...                      ...         ...   \n",
       "2018-12-31 23:46:00  183653737             Traffic Stop         CIT   \n",
       "2018-12-31 23:47:00  183653745            Audible Alarm         PAS   \n",
       "2018-12-31 23:49:00  183653746             Passing Call         HAN   \n",
       "2018-12-31 23:54:00  183653756      Traf Violation Cite         CIT   \n",
       "2018-12-31 23:57:00  183653763             Traffic Stop         ADM   \n",
       "\n",
       "                                       Address           City State  \\\n",
       "Call Date Time                                                        \n",
       "2019-11-03 22:33:00       0 Block Of Rausch St  San Francisco    CA   \n",
       "2019-11-03 22:33:00     200 Block Of Laguna St  San Francisco    CA   \n",
       "2019-11-03 22:33:00  1700 Block Of Bancroft Av  San Francisco    CA   \n",
       "2019-11-03 22:35:00       Funston Av/balboa St  San Francisco    CA   \n",
       "2019-11-03 22:34:00        600 Block Of 4th St  San Francisco    CA   \n",
       "...                                        ...            ...   ...   \n",
       "2018-12-31 23:46:00     Sansome St/chestnut St  San Francisco    CA   \n",
       "2018-12-31 23:47:00      1900 Block Of 18th Av  San Francisco    CA   \n",
       "2018-12-31 23:49:00      3300 Block Of 20th Av  San Francisco    CA   \n",
       "2018-12-31 23:54:00          100 Blk Howard St  San Francisco    CA   \n",
       "2018-12-31 23:57:00     Geary Bl/divisadero St  San Francisco    CA   \n",
       "\n",
       "                     Agency Id          Common Location  \n",
       "Call Date Time                                           \n",
       "2019-11-03 22:33:00          1                      NaN  \n",
       "2019-11-03 22:33:00          1                      NaN  \n",
       "2019-11-03 22:33:00          1                      NaN  \n",
       "2019-11-03 22:35:00          1                      NaN  \n",
       "2019-11-03 22:34:00          1                      NaN  \n",
       "...                        ...                      ...  \n",
       "2018-12-31 23:46:00          1                      NaN  \n",
       "2018-12-31 23:47:00          1                      NaN  \n",
       "2018-12-31 23:49:00          1  Stonestown Galleria, Sf  \n",
       "2018-12-31 23:54:00          1                      NaN  \n",
       "2018-12-31 23:57:00          1                      NaN  \n",
       "\n",
       "[3348194 rows x 8 columns]"
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.set_index(\"Call Date Time\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>193074002</td>\n",
       "      <td>Traf Violation Tow</td>\n",
       "      <td>2019-11-03 22:33:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>0 Block Of Rausch St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>193074003</td>\n",
       "      <td>Traf Violation Tow</td>\n",
       "      <td>2019-11-03 22:33:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>200 Block Of Laguna St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>193074004</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>2019-11-03 22:33:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>1700 Block Of Bancroft Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>193074006</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>2019-11-03 22:35:00</td>\n",
       "      <td>CIT</td>\n",
       "      <td>Funston Av/balboa St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>193074008</td>\n",
       "      <td>Fight No Weapon</td>\n",
       "      <td>2019-11-03 22:34:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>600 Block Of 4th St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1069836</th>\n",
       "      <td>193343124</td>\n",
       "      <td>Aided Case</td>\n",
       "      <td>2019-11-30 23:06:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>400 Block Of Castro St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1069837</th>\n",
       "      <td>193343127</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-11-30 23:07:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>700 Block Of Stanyan St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>Alvord Lake</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1069838</th>\n",
       "      <td>193343128</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>2019-11-30 23:07:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>Folsom St/17th St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1069839</th>\n",
       "      <td>193343130</td>\n",
       "      <td>800 Poss</td>\n",
       "      <td>2019-11-30 23:06:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>Castro St/market St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1069840</th>\n",
       "      <td>193343133</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>2019-11-30 23:13:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>Ellington Av/mount Vernon Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>834963 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Crime Id Original Crime Type Name       Call Date Time Disposition  \\\n",
       "0        193074002       Traf Violation Tow  2019-11-03 22:33:00         GOA   \n",
       "1        193074003       Traf Violation Tow  2019-11-03 22:33:00         HAN   \n",
       "2        193074004      Traf Violation Cite  2019-11-03 22:33:00         GOA   \n",
       "3        193074006             Traffic Stop  2019-11-03 22:35:00         CIT   \n",
       "4        193074008          Fight No Weapon  2019-11-03 22:34:00         HAN   \n",
       "...            ...                      ...                  ...         ...   \n",
       "1069836  193343124               Aided Case  2019-11-30 23:06:00         HAN   \n",
       "1069837  193343127             Passing Call  2019-11-30 23:07:00         HAN   \n",
       "1069838  193343128             Traffic Stop  2019-11-30 23:07:00         HAN   \n",
       "1069839  193343130                 800 Poss  2019-11-30 23:06:00         HAN   \n",
       "1069840  193343133      Traf Violation Cite  2019-11-30 23:13:00         GOA   \n",
       "\n",
       "                              Address           City State  Agency Id  \\\n",
       "0                0 Block Of Rausch St  San Francisco    CA          1   \n",
       "1              200 Block Of Laguna St  San Francisco    CA          1   \n",
       "2           1700 Block Of Bancroft Av  San Francisco    CA          1   \n",
       "3                Funston Av/balboa St  San Francisco    CA          1   \n",
       "4                 600 Block Of 4th St  San Francisco    CA          1   \n",
       "...                               ...            ...   ...        ...   \n",
       "1069836        400 Block Of Castro St  San Francisco    CA          1   \n",
       "1069837       700 Block Of Stanyan St  San Francisco    CA          1   \n",
       "1069838             Folsom St/17th St  San Francisco    CA          1   \n",
       "1069839           Castro St/market St  San Francisco    CA          1   \n",
       "1069840  Ellington Av/mount Vernon Av  San Francisco    CA          1   \n",
       "\n",
       "        Common Location  \n",
       "0                   NaN  \n",
       "1                   NaN  \n",
       "2                   NaN  \n",
       "3                   NaN  \n",
       "4                   NaN  \n",
       "...                 ...  \n",
       "1069836             NaN  \n",
       "1069837     Alvord Lake  \n",
       "1069838             NaN  \n",
       "1069839             NaN  \n",
       "1069840             NaN  \n",
       "\n",
       "[834963 rows x 9 columns]"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# only look at data in 2019\n",
    "mask_2019 = ((df['Call Date Time'] > '2019-01-01 00:00:00') & (df['Call Date Time'] <= '2019-12-31 23:59:59'))\n",
    "df2 = df.loc[mask_2019]\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>144998</th>\n",
       "      <td>191040272</td>\n",
       "      <td>152</td>\n",
       "      <td>2019-04-14 02:04:00</td>\n",
       "      <td>NOM</td>\n",
       "      <td>200 Block Of 28th Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145931</th>\n",
       "      <td>191041641</td>\n",
       "      <td>22500e</td>\n",
       "      <td>2019-04-14 13:02:00</td>\n",
       "      <td>CIT</td>\n",
       "      <td>1400 Block Of Francisco St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146321</th>\n",
       "      <td>191042225</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>2019-04-14 15:47:00</td>\n",
       "      <td>ADV</td>\n",
       "      <td>Twin Peaks Bl/portola Dr</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146673</th>\n",
       "      <td>191042736</td>\n",
       "      <td>601</td>\n",
       "      <td>2019-04-14 17:40:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>300 Block Of Hyde St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147302</th>\n",
       "      <td>191043702</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>2019-04-14 22:40:00</td>\n",
       "      <td>CIT</td>\n",
       "      <td>5th St/jessie St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597192</th>\n",
       "      <td>191042875</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-04-14 18:21:00</td>\n",
       "      <td>ND</td>\n",
       "      <td>20th And Geary</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597507</th>\n",
       "      <td>191043493</td>\n",
       "      <td>Rear Plate</td>\n",
       "      <td>2019-04-14 21:28:00</td>\n",
       "      <td>REP</td>\n",
       "      <td>200 Block Of Park St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597538</th>\n",
       "      <td>191042307</td>\n",
       "      <td>518</td>\n",
       "      <td>2019-04-14 16:05:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>1st St/harrison St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597644</th>\n",
       "      <td>191042529</td>\n",
       "      <td>586</td>\n",
       "      <td>2019-04-14 16:55:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>8th St/brannan St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>598154</th>\n",
       "      <td>191043677</td>\n",
       "      <td>Report</td>\n",
       "      <td>2019-04-14 22:28:00</td>\n",
       "      <td>REP</td>\n",
       "      <td>100 Block Of 4th St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2160 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Crime Id Original Crime Type Name       Call Date Time Disposition  \\\n",
       "144998  191040272                      152  2019-04-14 02:04:00         NOM   \n",
       "145931  191041641                   22500e  2019-04-14 13:02:00         CIT   \n",
       "146321  191042225             Traffic Stop  2019-04-14 15:47:00         ADV   \n",
       "146673  191042736                      601  2019-04-14 17:40:00         HAN   \n",
       "147302  191043702             Traffic Stop  2019-04-14 22:40:00         CIT   \n",
       "...           ...                      ...                  ...         ...   \n",
       "597192  191042875             Passing Call  2019-04-14 18:21:00          ND   \n",
       "597507  191043493               Rear Plate  2019-04-14 21:28:00         REP   \n",
       "597538  191042307                      518  2019-04-14 16:05:00         HAN   \n",
       "597644  191042529                      586  2019-04-14 16:55:00         UTL   \n",
       "598154  191043677                   Report  2019-04-14 22:28:00         REP   \n",
       "\n",
       "                           Address           City State  Agency Id  \\\n",
       "144998        200 Block Of 28th Av  San Francisco    CA          1   \n",
       "145931  1400 Block Of Francisco St  San Francisco    CA          1   \n",
       "146321    Twin Peaks Bl/portola Dr  San Francisco    CA          1   \n",
       "146673        300 Block Of Hyde St  San Francisco    CA          1   \n",
       "147302            5th St/jessie St  San Francisco    CA          1   \n",
       "...                            ...            ...   ...        ...   \n",
       "597192              20th And Geary            NaN    CA          1   \n",
       "597507        200 Block Of Park St  San Francisco    CA          1   \n",
       "597538          1st St/harrison St  San Francisco    CA          1   \n",
       "597644           8th St/brannan St  San Francisco    CA          1   \n",
       "598154         100 Block Of 4th St  San Francisco    CA          1   \n",
       "\n",
       "       Common Location  \n",
       "144998             NaN  \n",
       "145931             NaN  \n",
       "146321             NaN  \n",
       "146673             NaN  \n",
       "147302             NaN  \n",
       "...                ...  \n",
       "597192             NaN  \n",
       "597507             NaN  \n",
       "597538             NaN  \n",
       "597644             NaN  \n",
       "598154             NaN  \n",
       "\n",
       "[2160 rows x 9 columns]"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#control 1 sunday\n",
    "control_sunday = ((df2['Call Date Time'] > '2019-04-14 00:00:00') & (df2['Call Date Time'] <= '2019-04-14 23:59:59'))\n",
    "control_sunday_rows =df2.loc[control_sunday]\n",
    "control_sunday_rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>214517</th>\n",
       "      <td>191290927</td>\n",
       "      <td>7,2,46</td>\n",
       "      <td>2019-05-09 08:41:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>2200 Block Of Sacramento St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215446</th>\n",
       "      <td>191292438</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>2019-05-09 14:55:00</td>\n",
       "      <td>CIT</td>\n",
       "      <td>8th St/folsom St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215833</th>\n",
       "      <td>191292994</td>\n",
       "      <td>Dw</td>\n",
       "      <td>2019-05-09 17:03:00</td>\n",
       "      <td>CAN</td>\n",
       "      <td>900 Block Of 28th Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587607</th>\n",
       "      <td>191290004</td>\n",
       "      <td>Suspicious Person</td>\n",
       "      <td>2019-05-09 00:01:00</td>\n",
       "      <td>ND</td>\n",
       "      <td>200 Block Of Turk St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587608</th>\n",
       "      <td>191290012</td>\n",
       "      <td>Suspicious Vehicle</td>\n",
       "      <td>2019-05-09 00:03:00</td>\n",
       "      <td>ARR</td>\n",
       "      <td>20th St/mission St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>646531</th>\n",
       "      <td>191292750</td>\n",
       "      <td>Npat</td>\n",
       "      <td>2019-05-09 16:10:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>0 Block Of Lyon St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>647176</th>\n",
       "      <td>191291804</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-05-09 12:22:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>795 Pacific</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>647599</th>\n",
       "      <td>191292693</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-05-09 15:55:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>Ybi</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>647666</th>\n",
       "      <td>191292852</td>\n",
       "      <td>Drugs</td>\n",
       "      <td>2019-05-09 16:31:00</td>\n",
       "      <td>ADV</td>\n",
       "      <td>400 Block Of Turk St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>648276</th>\n",
       "      <td>191294133</td>\n",
       "      <td>909</td>\n",
       "      <td>2019-05-09 22:29:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>1700 Block Of Eddy St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2345 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Crime Id Original Crime Type Name       Call Date Time Disposition  \\\n",
       "214517  191290927                   7,2,46  2019-05-09 08:41:00         HAN   \n",
       "215446  191292438             Traffic Stop  2019-05-09 14:55:00         CIT   \n",
       "215833  191292994                       Dw  2019-05-09 17:03:00         CAN   \n",
       "587607  191290004        Suspicious Person  2019-05-09 00:01:00          ND   \n",
       "587608  191290012       Suspicious Vehicle  2019-05-09 00:03:00         ARR   \n",
       "...           ...                      ...                  ...         ...   \n",
       "646531  191292750                     Npat  2019-05-09 16:10:00         GOA   \n",
       "647176  191291804             Passing Call  2019-05-09 12:22:00         HAN   \n",
       "647599  191292693             Passing Call  2019-05-09 15:55:00         HAN   \n",
       "647666  191292852                    Drugs  2019-05-09 16:31:00         ADV   \n",
       "648276  191294133                      909  2019-05-09 22:29:00         UTL   \n",
       "\n",
       "                            Address           City State  Agency Id  \\\n",
       "214517  2200 Block Of Sacramento St  San Francisco    CA          1   \n",
       "215446             8th St/folsom St  San Francisco    CA          1   \n",
       "215833         900 Block Of 28th Av  San Francisco    CA          1   \n",
       "587607         200 Block Of Turk St  San Francisco    CA          1   \n",
       "587608           20th St/mission St  San Francisco    CA          1   \n",
       "...                             ...            ...   ...        ...   \n",
       "646531           0 Block Of Lyon St  San Francisco    CA          1   \n",
       "647176                  795 Pacific            NaN    CA          1   \n",
       "647599                          Ybi            NaN    CA          1   \n",
       "647666         400 Block Of Turk St  San Francisco    CA          1   \n",
       "648276        1700 Block Of Eddy St  San Francisco    CA          1   \n",
       "\n",
       "       Common Location  \n",
       "214517             NaN  \n",
       "215446             NaN  \n",
       "215833             NaN  \n",
       "587607             NaN  \n",
       "587608             NaN  \n",
       "...                ...  \n",
       "646531             NaN  \n",
       "647176             NaN  \n",
       "647599             NaN  \n",
       "647666             NaN  \n",
       "648276             NaN  \n",
       "\n",
       "[2345 rows x 9 columns]"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#control 2 thursday\n",
    "control_thursday = ((df2['Call Date Time'] > '2019-05-09 00:00:00') & (df2['Call Date Time'] <= '2019-05-09 23:59:59'))\n",
    "control_thursday_rows = df2.loc[control_thursday]\n",
    "control_thursday_rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1004029</th>\n",
       "      <td>193000006</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>2019-10-27 00:02:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>700 Block Of Page St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1004030</th>\n",
       "      <td>193000007</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>2019-10-27 00:02:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>200 Block Of Naglee Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1004031</th>\n",
       "      <td>193000010</td>\n",
       "      <td>Noise Nuisance</td>\n",
       "      <td>2019-10-27 00:03:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>1200 Block Of South Van Ness Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1004032</th>\n",
       "      <td>193000012</td>\n",
       "      <td>Prowler</td>\n",
       "      <td>2019-10-27 00:03:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>Bache St/benton Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1004033</th>\n",
       "      <td>193000013</td>\n",
       "      <td>Person Screaming</td>\n",
       "      <td>2019-10-27 00:03:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>600 Block Of Mission St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1027772</th>\n",
       "      <td>193000732</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-10-27 05:42:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>5th St/bryant St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1028128</th>\n",
       "      <td>193002509</td>\n",
       "      <td>22500f</td>\n",
       "      <td>2019-10-27 14:35:00</td>\n",
       "      <td>CIT</td>\n",
       "      <td>200 Block Of Brighton Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1028241</th>\n",
       "      <td>193003044</td>\n",
       "      <td>Jo</td>\n",
       "      <td>2019-10-27 16:40:00</td>\n",
       "      <td>ND</td>\n",
       "      <td>Broadway/larkin St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1028388</th>\n",
       "      <td>193003753</td>\n",
       "      <td>Graffiti Vandalism</td>\n",
       "      <td>2019-10-27 20:17:00</td>\n",
       "      <td>ARR</td>\n",
       "      <td>300 Block Of Shipley St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1028421</th>\n",
       "      <td>193003923</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>2019-10-27 21:16:00</td>\n",
       "      <td>ADV</td>\n",
       "      <td>Geary Bl/6th Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2152 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Crime Id Original Crime Type Name       Call Date Time Disposition  \\\n",
       "1004029  193000006      Traf Violation Cite  2019-10-27 00:02:00         GOA   \n",
       "1004030  193000007      Traf Violation Cite  2019-10-27 00:02:00         GOA   \n",
       "1004031  193000010           Noise Nuisance  2019-10-27 00:03:00         UTL   \n",
       "1004032  193000012                  Prowler  2019-10-27 00:03:00         GOA   \n",
       "1004033  193000013         Person Screaming  2019-10-27 00:03:00         UTL   \n",
       "...            ...                      ...                  ...         ...   \n",
       "1027772  193000732             Passing Call  2019-10-27 05:42:00         HAN   \n",
       "1028128  193002509                   22500f  2019-10-27 14:35:00         CIT   \n",
       "1028241  193003044                       Jo  2019-10-27 16:40:00          ND   \n",
       "1028388  193003753       Graffiti Vandalism  2019-10-27 20:17:00         ARR   \n",
       "1028421  193003923             Traffic Stop  2019-10-27 21:16:00         ADV   \n",
       "\n",
       "                                 Address           City State  Agency Id  \\\n",
       "1004029             700 Block Of Page St  San Francisco    CA          1   \n",
       "1004030           200 Block Of Naglee Av  San Francisco    CA          1   \n",
       "1004031  1200 Block Of South Van Ness Av  San Francisco    CA          1   \n",
       "1004032               Bache St/benton Av  San Francisco    CA          1   \n",
       "1004033          600 Block Of Mission St  San Francisco    CA          1   \n",
       "...                                  ...            ...   ...        ...   \n",
       "1027772                 5th St/bryant St  San Francisco    CA          1   \n",
       "1028128         200 Block Of Brighton Av  San Francisco    CA          1   \n",
       "1028241               Broadway/larkin St  San Francisco    CA          1   \n",
       "1028388          300 Block Of Shipley St  San Francisco    CA          1   \n",
       "1028421                  Geary Bl/6th Av  San Francisco    CA          1   \n",
       "\n",
       "        Common Location  \n",
       "1004029             NaN  \n",
       "1004030             NaN  \n",
       "1004031             NaN  \n",
       "1004032             NaN  \n",
       "1004033             NaN  \n",
       "...                 ...  \n",
       "1027772             NaN  \n",
       "1028128             NaN  \n",
       "1028241             NaN  \n",
       "1028388             NaN  \n",
       "1028421             NaN  \n",
       "\n",
       "[2152 rows x 9 columns]"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# game 1\n",
    "game1_sunday = ((df2['Call Date Time'] > '2019-10-27 00:00:00') & (df2['Call Date Time'] <= '2019-10-27 23:59:59'))\n",
    "game1_sunday_rows = df2.loc[game1_sunday]\n",
    "game1_sunday_rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1504</th>\n",
       "      <td>193043059</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>2019-10-31 17:31:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>Rolph St/newton St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3105</th>\n",
       "      <td>193044525</td>\n",
       "      <td>Suspicious Vehicle</td>\n",
       "      <td>2019-10-31 23:42:00</td>\n",
       "      <td>ND</td>\n",
       "      <td>Skyline Bl/great Hy</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4589</th>\n",
       "      <td>193044526</td>\n",
       "      <td>Party</td>\n",
       "      <td>2019-10-31 23:44:00</td>\n",
       "      <td>NOM</td>\n",
       "      <td>3100 Block Of Geary Bl</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5213</th>\n",
       "      <td>193044529</td>\n",
       "      <td>Well Being Check</td>\n",
       "      <td>2019-10-31 23:43:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>800 Block Of 48th Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5839</th>\n",
       "      <td>193044534</td>\n",
       "      <td>212</td>\n",
       "      <td>2019-10-31 23:46:00</td>\n",
       "      <td>NOM</td>\n",
       "      <td>200 Block Of Ellis St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1032119</th>\n",
       "      <td>193040800</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-10-31 08:38:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>Noe St/14th St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1032136</th>\n",
       "      <td>193040892</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-10-31 08:58:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>Pge Substation</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1032333</th>\n",
       "      <td>193041745</td>\n",
       "      <td>Casing</td>\n",
       "      <td>2019-10-31 12:16:00</td>\n",
       "      <td>ADV</td>\n",
       "      <td>9th Av/ortega St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1032618</th>\n",
       "      <td>193043128</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-10-31 17:45:00</td>\n",
       "      <td>ND</td>\n",
       "      <td>Duboce Park</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1032902</th>\n",
       "      <td>193044474</td>\n",
       "      <td>Noise Nuisance</td>\n",
       "      <td>2019-10-31 23:27:00</td>\n",
       "      <td>ADV</td>\n",
       "      <td>900 Block Of Broadway</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2457 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Crime Id Original Crime Type Name       Call Date Time Disposition  \\\n",
       "1504     193043059      Traf Violation Cite  2019-10-31 17:31:00         GOA   \n",
       "3105     193044525       Suspicious Vehicle  2019-10-31 23:42:00          ND   \n",
       "4589     193044526                    Party  2019-10-31 23:44:00         NOM   \n",
       "5213     193044529         Well Being Check  2019-10-31 23:43:00         UTL   \n",
       "5839     193044534                      212  2019-10-31 23:46:00         NOM   \n",
       "...            ...                      ...                  ...         ...   \n",
       "1032119  193040800             Passing Call  2019-10-31 08:38:00         HAN   \n",
       "1032136  193040892             Passing Call  2019-10-31 08:58:00         HAN   \n",
       "1032333  193041745                   Casing  2019-10-31 12:16:00         ADV   \n",
       "1032618  193043128             Passing Call  2019-10-31 17:45:00          ND   \n",
       "1032902  193044474           Noise Nuisance  2019-10-31 23:27:00         ADV   \n",
       "\n",
       "                        Address           City State  Agency Id  \\\n",
       "1504         Rolph St/newton St  San Francisco    CA          1   \n",
       "3105        Skyline Bl/great Hy  San Francisco    CA          1   \n",
       "4589     3100 Block Of Geary Bl  San Francisco    CA          1   \n",
       "5213       800 Block Of 48th Av  San Francisco    CA          1   \n",
       "5839      200 Block Of Ellis St  San Francisco    CA          1   \n",
       "...                         ...            ...   ...        ...   \n",
       "1032119          Noe St/14th St  San Francisco    CA          1   \n",
       "1032136          Pge Substation            NaN    CA          1   \n",
       "1032333        9th Av/ortega St  San Francisco    CA          1   \n",
       "1032618             Duboce Park            NaN    CA          1   \n",
       "1032902   900 Block Of Broadway  San Francisco    CA          1   \n",
       "\n",
       "        Common Location  \n",
       "1504                NaN  \n",
       "3105                NaN  \n",
       "4589                NaN  \n",
       "5213                NaN  \n",
       "5839                NaN  \n",
       "...                 ...  \n",
       "1032119             NaN  \n",
       "1032136             NaN  \n",
       "1032333             NaN  \n",
       "1032618             NaN  \n",
       "1032902             NaN  \n",
       "\n",
       "[2457 rows x 9 columns]"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# game 2\n",
    "game2_thursday = ((df2['Call Date Time'] > '2019-10-31 00:00:00') & (df2['Call Date Time'] <= '2019-10-31 23:59:59'))\n",
    "game2_thursday_rows = df2.loc[game2_thursday]\n",
    "game2_thursday_rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>146321</th>\n",
       "      <td>191042225</td>\n",
       "      <td>Traffic Stop</td>\n",
       "      <td>2019-04-14 15:47:00</td>\n",
       "      <td>ADV</td>\n",
       "      <td>Twin Peaks Bl/portola Dr</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146673</th>\n",
       "      <td>191042736</td>\n",
       "      <td>601</td>\n",
       "      <td>2019-04-14 17:40:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>300 Block Of Hyde St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527861</th>\n",
       "      <td>191041843</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>2019-04-14 14:02:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>2500 Block Of Fulton St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527862</th>\n",
       "      <td>191041845</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-04-14 14:03:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>700 Block Of California Av</td>\n",
       "      <td>Treasure Isla</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527863</th>\n",
       "      <td>191041847</td>\n",
       "      <td>Suspicious Person</td>\n",
       "      <td>2019-04-14 14:05:00</td>\n",
       "      <td>ADV</td>\n",
       "      <td>800 Block Of The Embarcadero Sou</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>Pier 40, Sf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>596887</th>\n",
       "      <td>191042273</td>\n",
       "      <td>Rep</td>\n",
       "      <td>2019-04-14 15:54:00</td>\n",
       "      <td>REP</td>\n",
       "      <td>500 Block Of Haight St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597093</th>\n",
       "      <td>191042668</td>\n",
       "      <td>Trespasser</td>\n",
       "      <td>2019-04-14 17:26:00</td>\n",
       "      <td>ADV</td>\n",
       "      <td>200 Block Of Turk St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597192</th>\n",
       "      <td>191042875</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-04-14 18:21:00</td>\n",
       "      <td>ND</td>\n",
       "      <td>20th And Geary</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597538</th>\n",
       "      <td>191042307</td>\n",
       "      <td>518</td>\n",
       "      <td>2019-04-14 16:05:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>1st St/harrison St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>597644</th>\n",
       "      <td>191042529</td>\n",
       "      <td>586</td>\n",
       "      <td>2019-04-14 16:55:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>8th St/brannan St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>923 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Crime Id Original Crime Type Name       Call Date Time Disposition  \\\n",
       "146321  191042225             Traffic Stop  2019-04-14 15:47:00         ADV   \n",
       "146673  191042736                      601  2019-04-14 17:40:00         HAN   \n",
       "527861  191041843      Traf Violation Cite  2019-04-14 14:02:00         GOA   \n",
       "527862  191041845             Passing Call  2019-04-14 14:03:00         HAN   \n",
       "527863  191041847        Suspicious Person  2019-04-14 14:05:00         ADV   \n",
       "...           ...                      ...                  ...         ...   \n",
       "596887  191042273                      Rep  2019-04-14 15:54:00         REP   \n",
       "597093  191042668               Trespasser  2019-04-14 17:26:00         ADV   \n",
       "597192  191042875             Passing Call  2019-04-14 18:21:00          ND   \n",
       "597538  191042307                      518  2019-04-14 16:05:00         HAN   \n",
       "597644  191042529                      586  2019-04-14 16:55:00         UTL   \n",
       "\n",
       "                                 Address           City State  Agency Id  \\\n",
       "146321          Twin Peaks Bl/portola Dr  San Francisco    CA          1   \n",
       "146673              300 Block Of Hyde St  San Francisco    CA          1   \n",
       "527861           2500 Block Of Fulton St  San Francisco    CA          1   \n",
       "527862        700 Block Of California Av  Treasure Isla    CA          1   \n",
       "527863  800 Block Of The Embarcadero Sou  San Francisco    CA          1   \n",
       "...                                  ...            ...   ...        ...   \n",
       "596887            500 Block Of Haight St  San Francisco    CA          1   \n",
       "597093              200 Block Of Turk St  San Francisco    CA          1   \n",
       "597192                    20th And Geary            NaN    CA          1   \n",
       "597538                1st St/harrison St  San Francisco    CA          1   \n",
       "597644                 8th St/brannan St  San Francisco    CA          1   \n",
       "\n",
       "       Common Location  \n",
       "146321             NaN  \n",
       "146673             NaN  \n",
       "527861             NaN  \n",
       "527862             NaN  \n",
       "527863     Pier 40, Sf  \n",
       "...                ...  \n",
       "596887             NaN  \n",
       "597093             NaN  \n",
       "597192             NaN  \n",
       "597538             NaN  \n",
       "597644             NaN  \n",
       "\n",
       "[923 rows x 9 columns]"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#control 1 between 2pm and 9pm Sunday\n",
    "control1_times = ((df2['Call Date Time'] > '2019-04-14 14:00:00') & (df2['Call Date Time'] <= '2019-04-14 21:00:00'))\n",
    "control1_times_rows = df2.loc[control1_times]\n",
    "control1_times_rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>589425</th>\n",
       "      <td>191293235</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-05-09 18:04:00</td>\n",
       "      <td>Not recorded</td>\n",
       "      <td>16th St/mission St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589426</th>\n",
       "      <td>191293238</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-05-09 18:04:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>500 Block Of The Embarcadero Sou</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>Pier 30, Sf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589427</th>\n",
       "      <td>191293239</td>\n",
       "      <td>Trespasser</td>\n",
       "      <td>2019-05-09 18:01:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>1700 Block Of Valencia St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589428</th>\n",
       "      <td>191293240</td>\n",
       "      <td>Well Being Check</td>\n",
       "      <td>2019-05-09 18:02:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>The Embarcadero Sou/howard St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589429</th>\n",
       "      <td>191293246</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>2019-05-09 18:05:00</td>\n",
       "      <td>NOM</td>\n",
       "      <td>0 Block Of Cypress St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>645835</th>\n",
       "      <td>191293494</td>\n",
       "      <td>.46</td>\n",
       "      <td>2019-05-09 19:02:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>200 Block Of Main St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>645895</th>\n",
       "      <td>191293629</td>\n",
       "      <td>Petty Theft</td>\n",
       "      <td>2019-05-09 19:42:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>Market St/10th St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>646195</th>\n",
       "      <td>191294338</td>\n",
       "      <td>Rep</td>\n",
       "      <td>2019-05-09 23:56:00</td>\n",
       "      <td>CAN</td>\n",
       "      <td>2700 Block Of Geary Bl</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>646357</th>\n",
       "      <td>191293497</td>\n",
       "      <td>Traf Violation Cite</td>\n",
       "      <td>2019-05-09 19:05:00</td>\n",
       "      <td>Not recorded</td>\n",
       "      <td>2300 Block Of 32nd Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>648276</th>\n",
       "      <td>191294133</td>\n",
       "      <td>909</td>\n",
       "      <td>2019-05-09 22:29:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>1700 Block Of Eddy St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>649 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Crime Id Original Crime Type Name       Call Date Time   Disposition  \\\n",
       "589425  191293235             Passing Call  2019-05-09 18:04:00  Not recorded   \n",
       "589426  191293238             Passing Call  2019-05-09 18:04:00           HAN   \n",
       "589427  191293239               Trespasser  2019-05-09 18:01:00           GOA   \n",
       "589428  191293240         Well Being Check  2019-05-09 18:02:00           HAN   \n",
       "589429  191293246      Traf Violation Cite  2019-05-09 18:05:00           NOM   \n",
       "...           ...                      ...                  ...           ...   \n",
       "645835  191293494                      .46  2019-05-09 19:02:00           GOA   \n",
       "645895  191293629              Petty Theft  2019-05-09 19:42:00           HAN   \n",
       "646195  191294338                      Rep  2019-05-09 23:56:00           CAN   \n",
       "646357  191293497      Traf Violation Cite  2019-05-09 19:05:00  Not recorded   \n",
       "648276  191294133                      909  2019-05-09 22:29:00           UTL   \n",
       "\n",
       "                                 Address           City State  Agency Id  \\\n",
       "589425                16th St/mission St  San Francisco    CA          1   \n",
       "589426  500 Block Of The Embarcadero Sou  San Francisco    CA          1   \n",
       "589427         1700 Block Of Valencia St  San Francisco    CA          1   \n",
       "589428     The Embarcadero Sou/howard St  San Francisco    CA          1   \n",
       "589429             0 Block Of Cypress St  San Francisco    CA          1   \n",
       "...                                  ...            ...   ...        ...   \n",
       "645835              200 Block Of Main St  San Francisco    CA          1   \n",
       "645895                 Market St/10th St  San Francisco    CA          1   \n",
       "646195            2700 Block Of Geary Bl  San Francisco    CA          1   \n",
       "646357             2300 Block Of 32nd Av  San Francisco    CA          1   \n",
       "648276             1700 Block Of Eddy St  San Francisco    CA          1   \n",
       "\n",
       "       Common Location  \n",
       "589425             NaN  \n",
       "589426     Pier 30, Sf  \n",
       "589427             NaN  \n",
       "589428             NaN  \n",
       "589429             NaN  \n",
       "...                ...  \n",
       "645835             NaN  \n",
       "645895             NaN  \n",
       "646195             NaN  \n",
       "646357             NaN  \n",
       "648276             NaN  \n",
       "\n",
       "[649 rows x 9 columns]"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#control 2 between 6pm and 1am Thursday\n",
    "control2_times = ((df2['Call Date Time'] > '2019-05-09 18:00:00') & (df2['Call Date Time'] <= '2019-05-10 01:00:00'))\n",
    "control2_times_rows = df2.loc[control2_times]\n",
    "control2_times_rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1005178</th>\n",
       "      <td>193002367</td>\n",
       "      <td>Traf Violation Tow</td>\n",
       "      <td>2019-10-27 14:02:00</td>\n",
       "      <td>CIT</td>\n",
       "      <td>300 Block Of Minerva St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1005179</th>\n",
       "      <td>193002368</td>\n",
       "      <td>Traf Violation Tow</td>\n",
       "      <td>2019-10-27 14:02:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>100 Block Of Langton St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1005180</th>\n",
       "      <td>193002369</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-10-27 14:02:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>800 Block Of The Embarcadero Sou</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>Pier 40, Sf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1005185</th>\n",
       "      <td>193002371</td>\n",
       "      <td>22500e</td>\n",
       "      <td>2019-10-27 14:01:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>100 Block Of Magnolia St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1005186</th>\n",
       "      <td>193002373</td>\n",
       "      <td>Passing Call</td>\n",
       "      <td>2019-10-27 14:03:00</td>\n",
       "      <td>Not recorded</td>\n",
       "      <td>1500 Block Of Haight St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>Haight St Corridor, Sf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1009282</th>\n",
       "      <td>193003844</td>\n",
       "      <td>Auto Boost / Strip</td>\n",
       "      <td>2019-10-27 20:50:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>100 Block Of Christmas Tree Point Rd</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>Twin Peaks Viewpoint, Sf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1009283</th>\n",
       "      <td>193003848</td>\n",
       "      <td>Family</td>\n",
       "      <td>2019-10-27 20:48:00</td>\n",
       "      <td>CAN</td>\n",
       "      <td>100 Block Of Richland Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1028128</th>\n",
       "      <td>193002509</td>\n",
       "      <td>22500f</td>\n",
       "      <td>2019-10-27 14:35:00</td>\n",
       "      <td>CIT</td>\n",
       "      <td>200 Block Of Brighton Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1028241</th>\n",
       "      <td>193003044</td>\n",
       "      <td>Jo</td>\n",
       "      <td>2019-10-27 16:40:00</td>\n",
       "      <td>ND</td>\n",
       "      <td>Broadway/larkin St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1028388</th>\n",
       "      <td>193003753</td>\n",
       "      <td>Graffiti Vandalism</td>\n",
       "      <td>2019-10-27 20:17:00</td>\n",
       "      <td>ARR</td>\n",
       "      <td>300 Block Of Shipley St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>764 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Crime Id Original Crime Type Name       Call Date Time  \\\n",
       "1005178  193002367       Traf Violation Tow  2019-10-27 14:02:00   \n",
       "1005179  193002368       Traf Violation Tow  2019-10-27 14:02:00   \n",
       "1005180  193002369             Passing Call  2019-10-27 14:02:00   \n",
       "1005185  193002371                   22500e  2019-10-27 14:01:00   \n",
       "1005186  193002373             Passing Call  2019-10-27 14:03:00   \n",
       "...            ...                      ...                  ...   \n",
       "1009282  193003844       Auto Boost / Strip  2019-10-27 20:50:00   \n",
       "1009283  193003848                   Family  2019-10-27 20:48:00   \n",
       "1028128  193002509                   22500f  2019-10-27 14:35:00   \n",
       "1028241  193003044                       Jo  2019-10-27 16:40:00   \n",
       "1028388  193003753       Graffiti Vandalism  2019-10-27 20:17:00   \n",
       "\n",
       "          Disposition                               Address           City  \\\n",
       "1005178           CIT               300 Block Of Minerva St  San Francisco   \n",
       "1005179           GOA               100 Block Of Langton St  San Francisco   \n",
       "1005180           HAN      800 Block Of The Embarcadero Sou  San Francisco   \n",
       "1005185           HAN              100 Block Of Magnolia St  San Francisco   \n",
       "1005186  Not recorded               1500 Block Of Haight St  San Francisco   \n",
       "...               ...                                   ...            ...   \n",
       "1009282           UTL  100 Block Of Christmas Tree Point Rd  San Francisco   \n",
       "1009283           CAN              100 Block Of Richland Av  San Francisco   \n",
       "1028128           CIT              200 Block Of Brighton Av  San Francisco   \n",
       "1028241            ND                    Broadway/larkin St  San Francisco   \n",
       "1028388           ARR               300 Block Of Shipley St  San Francisco   \n",
       "\n",
       "        State  Agency Id           Common Location  \n",
       "1005178    CA          1                       NaN  \n",
       "1005179    CA          1                       NaN  \n",
       "1005180    CA          1               Pier 40, Sf  \n",
       "1005185    CA          1                       NaN  \n",
       "1005186    CA          1    Haight St Corridor, Sf  \n",
       "...       ...        ...                       ...  \n",
       "1009282    CA          1  Twin Peaks Viewpoint, Sf  \n",
       "1009283    CA          1                       NaN  \n",
       "1028128    CA          1                       NaN  \n",
       "1028241    CA          1                       NaN  \n",
       "1028388    CA          1                       NaN  \n",
       "\n",
       "[764 rows x 9 columns]"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sunday\n",
    "game1_times = ((df2['Call Date Time'] > '2019-10-27 14:00:00') & (df2['Call Date Time'] <= '2019-10-27 21:00:00'))\n",
    "game1_times_rows = df2.loc[game1_times]\n",
    "game1_times_rows\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3105</th>\n",
       "      <td>193044525</td>\n",
       "      <td>Suspicious Vehicle</td>\n",
       "      <td>2019-10-31 23:42:00</td>\n",
       "      <td>ND</td>\n",
       "      <td>Skyline Bl/great Hy</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4589</th>\n",
       "      <td>193044526</td>\n",
       "      <td>Party</td>\n",
       "      <td>2019-10-31 23:44:00</td>\n",
       "      <td>NOM</td>\n",
       "      <td>3100 Block Of Geary Bl</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5213</th>\n",
       "      <td>193044529</td>\n",
       "      <td>Well Being Check</td>\n",
       "      <td>2019-10-31 23:43:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>800 Block Of 48th Av</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5839</th>\n",
       "      <td>193044534</td>\n",
       "      <td>212</td>\n",
       "      <td>2019-10-31 23:46:00</td>\n",
       "      <td>NOM</td>\n",
       "      <td>200 Block Of Ellis St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7481</th>\n",
       "      <td>193044537</td>\n",
       "      <td>Complaint Unkn</td>\n",
       "      <td>2019-10-31 23:47:00</td>\n",
       "      <td>UTL</td>\n",
       "      <td>5200 Block Of Diamond Heights Bl</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1017092</th>\n",
       "      <td>193050031</td>\n",
       "      <td>Suspicious Vehicle</td>\n",
       "      <td>2019-11-01 00:14:00</td>\n",
       "      <td>HAN</td>\n",
       "      <td>Hampshire St/mariposa St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1017093</th>\n",
       "      <td>193050032</td>\n",
       "      <td>Well Being Check</td>\n",
       "      <td>2019-11-01 00:09:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>600 Block Of Market St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1017106</th>\n",
       "      <td>193050093</td>\n",
       "      <td>Jo</td>\n",
       "      <td>2019-11-01 00:38:00</td>\n",
       "      <td>NOM</td>\n",
       "      <td>18th St/market St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1017107</th>\n",
       "      <td>193050150</td>\n",
       "      <td>Casing</td>\n",
       "      <td>2019-11-01 00:53:00</td>\n",
       "      <td>GOA</td>\n",
       "      <td>15th St/utah St</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1032902</th>\n",
       "      <td>193044474</td>\n",
       "      <td>Noise Nuisance</td>\n",
       "      <td>2019-10-31 23:27:00</td>\n",
       "      <td>ADV</td>\n",
       "      <td>900 Block Of Broadway</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>863 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Crime Id Original Crime Type Name       Call Date Time Disposition  \\\n",
       "3105     193044525       Suspicious Vehicle  2019-10-31 23:42:00          ND   \n",
       "4589     193044526                    Party  2019-10-31 23:44:00         NOM   \n",
       "5213     193044529         Well Being Check  2019-10-31 23:43:00         UTL   \n",
       "5839     193044534                      212  2019-10-31 23:46:00         NOM   \n",
       "7481     193044537           Complaint Unkn  2019-10-31 23:47:00         UTL   \n",
       "...            ...                      ...                  ...         ...   \n",
       "1017092  193050031       Suspicious Vehicle  2019-11-01 00:14:00         HAN   \n",
       "1017093  193050032         Well Being Check  2019-11-01 00:09:00         GOA   \n",
       "1017106  193050093                       Jo  2019-11-01 00:38:00         NOM   \n",
       "1017107  193050150                   Casing  2019-11-01 00:53:00         GOA   \n",
       "1032902  193044474           Noise Nuisance  2019-10-31 23:27:00         ADV   \n",
       "\n",
       "                                  Address           City State  Agency Id  \\\n",
       "3105                  Skyline Bl/great Hy  San Francisco    CA          1   \n",
       "4589               3100 Block Of Geary Bl  San Francisco    CA          1   \n",
       "5213                 800 Block Of 48th Av  San Francisco    CA          1   \n",
       "5839                200 Block Of Ellis St  San Francisco    CA          1   \n",
       "7481     5200 Block Of Diamond Heights Bl  San Francisco    CA          1   \n",
       "...                                   ...            ...   ...        ...   \n",
       "1017092          Hampshire St/mariposa St  San Francisco    CA          1   \n",
       "1017093            600 Block Of Market St  San Francisco    CA          1   \n",
       "1017106                 18th St/market St  San Francisco    CA          1   \n",
       "1017107                   15th St/utah St  San Francisco    CA          1   \n",
       "1032902             900 Block Of Broadway  San Francisco    CA          1   \n",
       "\n",
       "        Common Location  \n",
       "3105                NaN  \n",
       "4589                NaN  \n",
       "5213                NaN  \n",
       "5839                NaN  \n",
       "7481                NaN  \n",
       "...                 ...  \n",
       "1017092             NaN  \n",
       "1017093             NaN  \n",
       "1017106             NaN  \n",
       "1017107             NaN  \n",
       "1032902             NaN  \n",
       "\n",
       "[863 rows x 9 columns]"
      ]
     },
     "execution_count": 203,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thursday\n",
    "\n",
    "game2_times = ((df2['Call Date Time'] > '2019-10-31 18:00:00') & (df2['Call Date Time'] <= '2019-11-01 01:00:00'))\n",
    "game2_times_rows = df2.loc[game2_times]\n",
    "game2_times_rows"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "The dates April 14, 2019 and May 5, 2019, are the control groups that represent crime on a typical day where the 49ers are not playing a home game. I am going to look at the times between 2pm and 9pm for April 19 and 6pm and 1am the next day for May 5. \n",
    "\n",
    "I will be comparing April 14, 2019 to October 27, 2019 and May 5, 2019 to October 31, 2019. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Call Date Time</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019-04-14 14:00:00</th>\n",
       "      <td>108</td>\n",
       "      <td>108</td>\n",
       "      <td>108</td>\n",
       "      <td>108</td>\n",
       "      <td>108</td>\n",
       "      <td>103</td>\n",
       "      <td>108</td>\n",
       "      <td>108</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-04-14 15:00:00</th>\n",
       "      <td>137</td>\n",
       "      <td>137</td>\n",
       "      <td>137</td>\n",
       "      <td>137</td>\n",
       "      <td>137</td>\n",
       "      <td>137</td>\n",
       "      <td>137</td>\n",
       "      <td>137</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-04-14 16:00:00</th>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-04-14 17:00:00</th>\n",
       "      <td>178</td>\n",
       "      <td>178</td>\n",
       "      <td>178</td>\n",
       "      <td>178</td>\n",
       "      <td>178</td>\n",
       "      <td>178</td>\n",
       "      <td>178</td>\n",
       "      <td>178</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-04-14 18:00:00</th>\n",
       "      <td>129</td>\n",
       "      <td>129</td>\n",
       "      <td>129</td>\n",
       "      <td>129</td>\n",
       "      <td>129</td>\n",
       "      <td>123</td>\n",
       "      <td>129</td>\n",
       "      <td>129</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-04-14 19:00:00</th>\n",
       "      <td>123</td>\n",
       "      <td>123</td>\n",
       "      <td>123</td>\n",
       "      <td>123</td>\n",
       "      <td>123</td>\n",
       "      <td>123</td>\n",
       "      <td>123</td>\n",
       "      <td>123</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-04-14 20:00:00</th>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Crime Id  Original Crime Type Name  Call Date Time  \\\n",
       "Call Date Time                                                            \n",
       "2019-04-14 14:00:00       108                       108             108   \n",
       "2019-04-14 15:00:00       137                       137             137   \n",
       "2019-04-14 16:00:00       138                       138             138   \n",
       "2019-04-14 17:00:00       178                       178             178   \n",
       "2019-04-14 18:00:00       129                       129             129   \n",
       "2019-04-14 19:00:00       123                       123             123   \n",
       "2019-04-14 20:00:00       110                       110             110   \n",
       "\n",
       "                     Disposition  Address  City  State  Agency Id  \\\n",
       "Call Date Time                                                      \n",
       "2019-04-14 14:00:00          108      108   103    108        108   \n",
       "2019-04-14 15:00:00          137      137   137    137        137   \n",
       "2019-04-14 16:00:00          138      138   138    138        138   \n",
       "2019-04-14 17:00:00          178      178   178    178        178   \n",
       "2019-04-14 18:00:00          129      129   123    129        129   \n",
       "2019-04-14 19:00:00          123      123   123    123        123   \n",
       "2019-04-14 20:00:00          110      110   110    110        110   \n",
       "\n",
       "                     Common Location  \n",
       "Call Date Time                        \n",
       "2019-04-14 14:00:00               18  \n",
       "2019-04-14 15:00:00               26  \n",
       "2019-04-14 16:00:00               44  \n",
       "2019-04-14 17:00:00               42  \n",
       "2019-04-14 18:00:00               19  \n",
       "2019-04-14 19:00:00               15  \n",
       "2019-04-14 20:00:00                8  "
      ]
     },
     "execution_count": 214,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# resample\n",
    "# We resample the data because we want to compare the crimes that happened per hour\n",
    "control1_times_rows['Call Date Time'] = pd.to_datetime(control1_times_rows['Call Date Time'])\n",
    "control1_crime = (control1_times_rows.resample(\"H\", on = \"Call Date Time\").count())\n",
    "control1_crime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Call Date Time</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019-05-09 18:00:00</th>\n",
       "      <td>132</td>\n",
       "      <td>132</td>\n",
       "      <td>132</td>\n",
       "      <td>132</td>\n",
       "      <td>132</td>\n",
       "      <td>132</td>\n",
       "      <td>132</td>\n",
       "      <td>132</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-09 19:00:00</th>\n",
       "      <td>113</td>\n",
       "      <td>113</td>\n",
       "      <td>113</td>\n",
       "      <td>113</td>\n",
       "      <td>113</td>\n",
       "      <td>113</td>\n",
       "      <td>113</td>\n",
       "      <td>113</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-09 20:00:00</th>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>85</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-09 21:00:00</th>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>76</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-09 22:00:00</th>\n",
       "      <td>85</td>\n",
       "      <td>85</td>\n",
       "      <td>85</td>\n",
       "      <td>85</td>\n",
       "      <td>85</td>\n",
       "      <td>81</td>\n",
       "      <td>85</td>\n",
       "      <td>85</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-09 23:00:00</th>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>86</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-10 00:00:00</th>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>62</td>\n",
       "      <td>68</td>\n",
       "      <td>68</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-10 01:00:00</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Crime Id  Original Crime Type Name  Call Date Time  \\\n",
       "Call Date Time                                                            \n",
       "2019-05-09 18:00:00       132                       132             132   \n",
       "2019-05-09 19:00:00       113                       113             113   \n",
       "2019-05-09 20:00:00        87                        87              87   \n",
       "2019-05-09 21:00:00        76                        76              76   \n",
       "2019-05-09 22:00:00        85                        85              85   \n",
       "2019-05-09 23:00:00        87                        87              87   \n",
       "2019-05-10 00:00:00        68                        68              68   \n",
       "2019-05-10 01:00:00         1                         1               1   \n",
       "\n",
       "                     Disposition  Address  City  State  Agency Id  \\\n",
       "Call Date Time                                                      \n",
       "2019-05-09 18:00:00          132      132   132    132        132   \n",
       "2019-05-09 19:00:00          113      113   113    113        113   \n",
       "2019-05-09 20:00:00           87       87    85     87         87   \n",
       "2019-05-09 21:00:00           76       76    76     76         76   \n",
       "2019-05-09 22:00:00           85       85    81     85         85   \n",
       "2019-05-09 23:00:00           87       87    86     87         87   \n",
       "2019-05-10 00:00:00           68       68    62     68         68   \n",
       "2019-05-10 01:00:00            1        1     1      1          1   \n",
       "\n",
       "                     Common Location  \n",
       "Call Date Time                        \n",
       "2019-05-09 18:00:00               19  \n",
       "2019-05-09 19:00:00               10  \n",
       "2019-05-09 20:00:00                9  \n",
       "2019-05-09 21:00:00                9  \n",
       "2019-05-09 22:00:00                6  \n",
       "2019-05-09 23:00:00                7  \n",
       "2019-05-10 00:00:00                8  \n",
       "2019-05-10 01:00:00                0  "
      ]
     },
     "execution_count": 208,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "control2_times_rows['Call Date Time'] = pd.to_datetime(control2_times_rows['Call Date Time'])\n",
    "control2_crime = (control2_times_rows.resample(\"H\", on = \"Call Date Time\").count())\n",
    "control2_crime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Call Date Time</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019-10-27 14:00:00</th>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>109</td>\n",
       "      <td>110</td>\n",
       "      <td>110</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-27 15:00:00</th>\n",
       "      <td>139</td>\n",
       "      <td>139</td>\n",
       "      <td>139</td>\n",
       "      <td>139</td>\n",
       "      <td>139</td>\n",
       "      <td>139</td>\n",
       "      <td>139</td>\n",
       "      <td>139</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-27 16:00:00</th>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>136</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-27 17:00:00</th>\n",
       "      <td>93</td>\n",
       "      <td>93</td>\n",
       "      <td>93</td>\n",
       "      <td>93</td>\n",
       "      <td>93</td>\n",
       "      <td>93</td>\n",
       "      <td>93</td>\n",
       "      <td>93</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-27 18:00:00</th>\n",
       "      <td>125</td>\n",
       "      <td>125</td>\n",
       "      <td>125</td>\n",
       "      <td>125</td>\n",
       "      <td>125</td>\n",
       "      <td>124</td>\n",
       "      <td>125</td>\n",
       "      <td>125</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-27 19:00:00</th>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>80</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-27 20:00:00</th>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>74</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-27 21:00:00</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Crime Id  Original Crime Type Name  Call Date Time  \\\n",
       "Call Date Time                                                            \n",
       "2019-10-27 14:00:00       110                       110             110   \n",
       "2019-10-27 15:00:00       139                       139             139   \n",
       "2019-10-27 16:00:00       141                       141             141   \n",
       "2019-10-27 17:00:00        93                        93              93   \n",
       "2019-10-27 18:00:00       125                       125             125   \n",
       "2019-10-27 19:00:00        80                        80              80   \n",
       "2019-10-27 20:00:00        75                        75              75   \n",
       "2019-10-27 21:00:00         1                         1               1   \n",
       "\n",
       "                     Disposition  Address  City  State  Agency Id  \\\n",
       "Call Date Time                                                      \n",
       "2019-10-27 14:00:00          110      110   109    110        110   \n",
       "2019-10-27 15:00:00          139      139   139    139        139   \n",
       "2019-10-27 16:00:00          141      141   136    141        141   \n",
       "2019-10-27 17:00:00           93       93    93     93         93   \n",
       "2019-10-27 18:00:00          125      125   124    125        125   \n",
       "2019-10-27 19:00:00           80       80    80     80         80   \n",
       "2019-10-27 20:00:00           75       75    74     75         75   \n",
       "2019-10-27 21:00:00            1        1     1      1          1   \n",
       "\n",
       "                     Common Location  \n",
       "Call Date Time                        \n",
       "2019-10-27 14:00:00               16  \n",
       "2019-10-27 15:00:00               23  \n",
       "2019-10-27 16:00:00               34  \n",
       "2019-10-27 17:00:00               12  \n",
       "2019-10-27 18:00:00               13  \n",
       "2019-10-27 19:00:00                8  \n",
       "2019-10-27 20:00:00                7  \n",
       "2019-10-27 21:00:00                0  "
      ]
     },
     "execution_count": 209,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "game1_times_rows['Call Date Time'] = pd.to_datetime(game1_times_rows['Call Date Time'])\n",
    "game1_crime = (game1_times_rows.resample(\"H\", on = \"Call Date Time\").count())\n",
    "game1_crime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Crime Id</th>\n",
       "      <th>Original Crime Type Name</th>\n",
       "      <th>Call Date Time</th>\n",
       "      <th>Disposition</th>\n",
       "      <th>Address</th>\n",
       "      <th>City</th>\n",
       "      <th>State</th>\n",
       "      <th>Agency Id</th>\n",
       "      <th>Common Location</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Call Date Time</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019-10-31 18:00:00</th>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>134</td>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-31 19:00:00</th>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>132</td>\n",
       "      <td>138</td>\n",
       "      <td>138</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-31 20:00:00</th>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>131</td>\n",
       "      <td>136</td>\n",
       "      <td>136</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-31 21:00:00</th>\n",
       "      <td>122</td>\n",
       "      <td>122</td>\n",
       "      <td>122</td>\n",
       "      <td>122</td>\n",
       "      <td>122</td>\n",
       "      <td>120</td>\n",
       "      <td>122</td>\n",
       "      <td>122</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-31 22:00:00</th>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>141</td>\n",
       "      <td>144</td>\n",
       "      <td>144</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-10-31 23:00:00</th>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>99</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-11-01 00:00:00</th>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>86</td>\n",
       "      <td>87</td>\n",
       "      <td>87</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-11-01 01:00:00</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Crime Id  Original Crime Type Name  Call Date Time  \\\n",
       "Call Date Time                                                            \n",
       "2019-10-31 18:00:00       136                       136             136   \n",
       "2019-10-31 19:00:00       138                       138             138   \n",
       "2019-10-31 20:00:00       136                       136             136   \n",
       "2019-10-31 21:00:00       122                       122             122   \n",
       "2019-10-31 22:00:00       144                       144             144   \n",
       "2019-10-31 23:00:00        99                        99              99   \n",
       "2019-11-01 00:00:00        87                        87              87   \n",
       "2019-11-01 01:00:00         1                         1               1   \n",
       "\n",
       "                     Disposition  Address  City  State  Agency Id  \\\n",
       "Call Date Time                                                      \n",
       "2019-10-31 18:00:00          136      136   134    136        136   \n",
       "2019-10-31 19:00:00          138      138   132    138        138   \n",
       "2019-10-31 20:00:00          136      136   131    136        136   \n",
       "2019-10-31 21:00:00          122      122   120    122        122   \n",
       "2019-10-31 22:00:00          144      144   141    144        144   \n",
       "2019-10-31 23:00:00           99       99    99     99         99   \n",
       "2019-11-01 00:00:00           87       87    86     87         87   \n",
       "2019-11-01 01:00:00            1        1     1      1          1   \n",
       "\n",
       "                     Common Location  \n",
       "Call Date Time                        \n",
       "2019-10-31 18:00:00               17  \n",
       "2019-10-31 19:00:00               19  \n",
       "2019-10-31 20:00:00               14  \n",
       "2019-10-31 21:00:00               14  \n",
       "2019-10-31 22:00:00               12  \n",
       "2019-10-31 23:00:00               12  \n",
       "2019-11-01 00:00:00                6  \n",
       "2019-11-01 01:00:00                0  "
      ]
     },
     "execution_count": 210,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "game2_times_rows['Call Date Time'] = pd.to_datetime(game2_times_rows['Call Date Time'])\n",
    "game2_crime = (game2_times_rows.resample(\"H\", on = \"Call Date Time\").count())\n",
    "game2_crime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x2e0062bd188>]"
      ]
     },
     "execution_count": 227,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 4/14\n",
    "plt.plot(control1_crime.index, control1_crime['Crime Id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x2e1065c7b88>]"
      ]
     },
     "execution_count": 229,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 5/5\n",
    "plt.plot(control2_crime.index, control2_crime['Crime Id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x2e10677e808>]"
      ]
     },
     "execution_count": 230,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#game 1\n",
    "plt.plot(game1_crime.index, game1_crime['Crime Id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x2e084f5d088>]"
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# game 2\n",
    "plt.plot(game2_crime.index, game2_crime['Crime Id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "122.5\n",
      "148.33333333333334\n",
      "116.5\n"
     ]
    }
   ],
   "source": [
    "# calculations for before , during , and after\n",
    "avg_crimes_before_ctrl1 = (108+137)/2\n",
    "avg_crimes_during_ctrl1 = (138+178+129)/3\n",
    "avg_crimes_after_ctrl1 = (123+110)/2\n",
    "print(avg_crimes_before_ctrl1)\n",
    "print(avg_crimes_during_ctrl1)\n",
    "print(avg_crimes_after_ctrl1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "122.5\n",
      "82.66666666666667\n",
      "77.5\n"
     ]
    }
   ],
   "source": [
    "avg_crimes_before_ctrl2 = (132+113)/2\n",
    "avg_crimes_during_ctrl2 = (87+76+85)/3\n",
    "avg_crimes_after_ctrl2= (68+87)/2\n",
    "print(avg_crimes_before_ctrl2)\n",
    "print(avg_crimes_during_ctrl2)\n",
    "print(avg_crimes_after_ctrl2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "124.5\n",
      "119.66666666666667\n",
      "77.5\n"
     ]
    }
   ],
   "source": [
    "avg_crimes_before_game1 = (110+139)/2\n",
    "avg_crimes_during_game1 = (141+93+125)/3\n",
    "avg_crimes_after_game1= (80+75)/2\n",
    "print(avg_crimes_before_game1)\n",
    "print(avg_crimes_during_game1)\n",
    "print(avg_crimes_after_game1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 241,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "137.0\n",
      "134.0\n",
      "93.0\n"
     ]
    }
   ],
   "source": [
    "avg_crimes_before_game2 = (136+138)/2\n",
    "avg_crimes_during_game2 = (136+122+144)/3\n",
    "avg_crimes_after_game2= (87+99)/2\n",
    "print(avg_crimes_before_game2)\n",
    "print(avg_crimes_during_game2)\n",
    "print(avg_crimes_after_game2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "metadata": {},
   "outputs": [],
   "source": [
    "def compare(game, control):\n",
    "    return ((control - game)/ control) * 100\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-23.955431754874652\n",
      "38.308457711442784\n"
     ]
    }
   ],
   "source": [
    "# percent change in crimes in control1 day vs game1 day \n",
    "print(compare(avg_crimes_during_ctrl1, avg_crimes_during_game1))\n",
    "# percent change in crimes in control2 day vs game2 day \n",
    "print(compare(avg_crimes_during_ctrl2, avg_crimes_during_game2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "After the data has been cleaned and analyzed, there was a 23.96% decrease in crimes during a game when comparing the April 19 date to October 27. There was a 38.31% increase in crimes when comparing the May 5 date to October 31. For the first control and the first game, crime seemed to decrease. We do not have enough information to determine why this is, although for the second control and the second game, crime seemed to increase during this game. There could be many factors on why crime was increased during a game on October 31. A possibility would be that there were other events occuring at the same time, such as a halloween event. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
